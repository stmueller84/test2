//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace imageLinksWebService_Test.ContentServerAuthentication {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Core.service.livelink.opentext.com", ConfigurationName="ContentServerAuthentication.Authentication")]
    public interface Authentication {
        
        // CODEGEN: Generating message contract since message AuthenticateApplicationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateApplication", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateApplicationResp" +
            "onse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        imageLinksWebService_Test.ContentServerAuthentication.AuthenticateApplicationResponse AuthenticateApplication(imageLinksWebService_Test.ContentServerAuthentication.AuthenticateApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthenticateUser(string userName, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateUserWithApplicationToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateUserWithApplica" +
            "tionTokenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthenticateUserWithApplicationToken(string userName, string userPassword, string applicationToken);
        
        // CODEGEN: Generating message contract since message CombineApplicationTokenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/CombineApplicationToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/CombineApplicationTokenResp" +
            "onse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        imageLinksWebService_Test.ContentServerAuthentication.CombineApplicationTokenResponse CombineApplicationToken(imageLinksWebService_Test.ContentServerAuthentication.CombineApplicationTokenRequest request);
        
        // CODEGEN: Generating message contract since message GetSessionExpirationDateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetSessionExpirationDate", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/GetSessionExpirationDateRes" +
            "ponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        imageLinksWebService_Test.ContentServerAuthentication.GetSessionExpirationDateResponse GetSessionExpirationDate(imageLinksWebService_Test.ContentServerAuthentication.GetSessionExpirationDateRequest request);
        
        // CODEGEN: Generating message contract since message ImpersonateApplicationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ImpersonateApplication", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ImpersonateApplicationRespo" +
            "nse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        imageLinksWebService_Test.ContentServerAuthentication.ImpersonateApplicationResponse ImpersonateApplication(imageLinksWebService_Test.ContentServerAuthentication.ImpersonateApplicationRequest request);
        
        // CODEGEN: Generating message contract since message ImpersonateUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ImpersonateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ImpersonateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        imageLinksWebService_Test.ContentServerAuthentication.ImpersonateUserResponse ImpersonateUser(imageLinksWebService_Test.ContentServerAuthentication.ImpersonateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ValidateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ValidateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateUser(string capToken);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:api.ecm.opentext.com")]
    public partial class OTAuthentication : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string authenticationTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AuthenticationToken {
            get {
                return this.authenticationTokenField;
            }
            set {
                this.authenticationTokenField = value;
                this.RaisePropertyChanged("AuthenticationToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateApplication", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class AuthenticateApplicationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string applicationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=1)]
        public string password;
        
        public AuthenticateApplicationRequest() {
        }
        
        public AuthenticateApplicationRequest(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string applicationID, string password) {
            this.OTAuthentication = OTAuthentication;
            this.applicationID = applicationID;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateApplicationResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class AuthenticateApplicationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string AuthenticateApplicationResult;
        
        public AuthenticateApplicationResponse() {
        }
        
        public AuthenticateApplicationResponse(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string AuthenticateApplicationResult) {
            this.OTAuthentication = OTAuthentication;
            this.AuthenticateApplicationResult = AuthenticateApplicationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CombineApplicationToken", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class CombineApplicationTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string applicationToken;
        
        public CombineApplicationTokenRequest() {
        }
        
        public CombineApplicationTokenRequest(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string applicationToken) {
            this.OTAuthentication = OTAuthentication;
            this.applicationToken = applicationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CombineApplicationTokenResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class CombineApplicationTokenResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string CombineApplicationTokenResult;
        
        public CombineApplicationTokenResponse() {
        }
        
        public CombineApplicationTokenResponse(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string CombineApplicationTokenResult) {
            this.OTAuthentication = OTAuthentication;
            this.CombineApplicationTokenResult = CombineApplicationTokenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSessionExpirationDate", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetSessionExpirationDateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        public GetSessionExpirationDateRequest() {
        }
        
        public GetSessionExpirationDateRequest(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication) {
            this.OTAuthentication = OTAuthentication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSessionExpirationDateResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetSessionExpirationDateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> GetSessionExpirationDateResult;
        
        public GetSessionExpirationDateResponse() {
        }
        
        public GetSessionExpirationDateResponse(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, System.Nullable<System.DateTime> GetSessionExpirationDateResult) {
            this.OTAuthentication = OTAuthentication;
            this.GetSessionExpirationDateResult = GetSessionExpirationDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateApplication", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateApplicationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string applicationID;
        
        public ImpersonateApplicationRequest() {
        }
        
        public ImpersonateApplicationRequest(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string applicationID) {
            this.OTAuthentication = OTAuthentication;
            this.applicationID = applicationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateApplicationResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateApplicationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string ImpersonateApplicationResult;
        
        public ImpersonateApplicationResponse() {
        }
        
        public ImpersonateApplicationResponse(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string ImpersonateApplicationResult) {
            this.OTAuthentication = OTAuthentication;
            this.ImpersonateApplicationResult = ImpersonateApplicationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateUser", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string userName;
        
        public ImpersonateUserRequest() {
        }
        
        public ImpersonateUserRequest(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string userName) {
            this.OTAuthentication = OTAuthentication;
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateUserResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string ImpersonateUserResult;
        
        public ImpersonateUserResponse() {
        }
        
        public ImpersonateUserResponse(imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string ImpersonateUserResult) {
            this.OTAuthentication = OTAuthentication;
            this.ImpersonateUserResult = ImpersonateUserResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AuthenticationChannel : imageLinksWebService_Test.ContentServerAuthentication.Authentication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationClient : System.ServiceModel.ClientBase<imageLinksWebService_Test.ContentServerAuthentication.Authentication>, imageLinksWebService_Test.ContentServerAuthentication.Authentication {
        
        public AuthenticationClient() {
        }
        
        public AuthenticationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        imageLinksWebService_Test.ContentServerAuthentication.AuthenticateApplicationResponse imageLinksWebService_Test.ContentServerAuthentication.Authentication.AuthenticateApplication(imageLinksWebService_Test.ContentServerAuthentication.AuthenticateApplicationRequest request) {
            return base.Channel.AuthenticateApplication(request);
        }
        
        public string AuthenticateApplication(ref imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string applicationID, string password) {
            imageLinksWebService_Test.ContentServerAuthentication.AuthenticateApplicationRequest inValue = new imageLinksWebService_Test.ContentServerAuthentication.AuthenticateApplicationRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationID = applicationID;
            inValue.password = password;
            imageLinksWebService_Test.ContentServerAuthentication.AuthenticateApplicationResponse retVal = ((imageLinksWebService_Test.ContentServerAuthentication.Authentication)(this)).AuthenticateApplication(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.AuthenticateApplicationResult;
        }
        
        public string AuthenticateUser(string userName, string userPassword) {
            return base.Channel.AuthenticateUser(userName, userPassword);
        }
        
        public string AuthenticateUserWithApplicationToken(string userName, string userPassword, string applicationToken) {
            return base.Channel.AuthenticateUserWithApplicationToken(userName, userPassword, applicationToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        imageLinksWebService_Test.ContentServerAuthentication.CombineApplicationTokenResponse imageLinksWebService_Test.ContentServerAuthentication.Authentication.CombineApplicationToken(imageLinksWebService_Test.ContentServerAuthentication.CombineApplicationTokenRequest request) {
            return base.Channel.CombineApplicationToken(request);
        }
        
        public string CombineApplicationToken(ref imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string applicationToken) {
            imageLinksWebService_Test.ContentServerAuthentication.CombineApplicationTokenRequest inValue = new imageLinksWebService_Test.ContentServerAuthentication.CombineApplicationTokenRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationToken = applicationToken;
            imageLinksWebService_Test.ContentServerAuthentication.CombineApplicationTokenResponse retVal = ((imageLinksWebService_Test.ContentServerAuthentication.Authentication)(this)).CombineApplicationToken(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.CombineApplicationTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        imageLinksWebService_Test.ContentServerAuthentication.GetSessionExpirationDateResponse imageLinksWebService_Test.ContentServerAuthentication.Authentication.GetSessionExpirationDate(imageLinksWebService_Test.ContentServerAuthentication.GetSessionExpirationDateRequest request) {
            return base.Channel.GetSessionExpirationDate(request);
        }
        
        public System.Nullable<System.DateTime> GetSessionExpirationDate(ref imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication) {
            imageLinksWebService_Test.ContentServerAuthentication.GetSessionExpirationDateRequest inValue = new imageLinksWebService_Test.ContentServerAuthentication.GetSessionExpirationDateRequest();
            inValue.OTAuthentication = OTAuthentication;
            imageLinksWebService_Test.ContentServerAuthentication.GetSessionExpirationDateResponse retVal = ((imageLinksWebService_Test.ContentServerAuthentication.Authentication)(this)).GetSessionExpirationDate(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.GetSessionExpirationDateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        imageLinksWebService_Test.ContentServerAuthentication.ImpersonateApplicationResponse imageLinksWebService_Test.ContentServerAuthentication.Authentication.ImpersonateApplication(imageLinksWebService_Test.ContentServerAuthentication.ImpersonateApplicationRequest request) {
            return base.Channel.ImpersonateApplication(request);
        }
        
        public string ImpersonateApplication(ref imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string applicationID) {
            imageLinksWebService_Test.ContentServerAuthentication.ImpersonateApplicationRequest inValue = new imageLinksWebService_Test.ContentServerAuthentication.ImpersonateApplicationRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationID = applicationID;
            imageLinksWebService_Test.ContentServerAuthentication.ImpersonateApplicationResponse retVal = ((imageLinksWebService_Test.ContentServerAuthentication.Authentication)(this)).ImpersonateApplication(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.ImpersonateApplicationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        imageLinksWebService_Test.ContentServerAuthentication.ImpersonateUserResponse imageLinksWebService_Test.ContentServerAuthentication.Authentication.ImpersonateUser(imageLinksWebService_Test.ContentServerAuthentication.ImpersonateUserRequest request) {
            return base.Channel.ImpersonateUser(request);
        }
        
        public string ImpersonateUser(ref imageLinksWebService_Test.ContentServerAuthentication.OTAuthentication OTAuthentication, string userName) {
            imageLinksWebService_Test.ContentServerAuthentication.ImpersonateUserRequest inValue = new imageLinksWebService_Test.ContentServerAuthentication.ImpersonateUserRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.userName = userName;
            imageLinksWebService_Test.ContentServerAuthentication.ImpersonateUserResponse retVal = ((imageLinksWebService_Test.ContentServerAuthentication.Authentication)(this)).ImpersonateUser(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.ImpersonateUserResult;
        }
        
        public string ValidateUser(string capToken) {
            return base.Channel.ValidateUser(capToken);
        }
    }
}
